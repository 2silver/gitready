---
published: true
layout: post
title: sauvegarder intelligemment des branches temporaires
category: beginner
---

J'utilise de plus en plus "les branches temporaires":http://gitready.com/beginner/2009/01/10/stashing-your-changes.html, et je trouve que la sortie de la commande "stash list" n'est pas très utile:

<pre>
$ git stash list
stash@{0}: WIP on feature1: b50788b... First pass...
stash@{1}: WIP on master: b50788b... First pass...
stash@{2}: WIP on shoulda: e783fb0... Upgrading the rest...
</pre>

Bien sûr, il y a le SHA relatif au commit et le message précisant la cible de votre travail, mais si vous travailler ne serait-ce qu'un peut comme moi, vous avez oublié ce sur quoi vous aviez travaillé   aprés avoir créé cette branche temporaire des changements et avoir passé des heures sur uen résolution de bugs. 

Il vaut mieux créer une branche temporaire de la manière suivante si vous vous voulez vraiment savoir ce qu'elle contient:

@git stash save "your message here"@

Maintenant, vos branches temporaires seront plus claires et j'espère que cela vous aidera à gagner du temps et vous aidera lors de vos rapatriements de données depuis ces branches temporaires.

<pre>
$ git stash list
stash@{0}: On shoulda: Updating instructions
stash@{1}: On master: started merge but need to fix #104 first
stash@{2}: On feature1: Adding some stuff
</pre>

Si vous voulez savoir ce qui a changé pour une branche temporaire, vous pouvez simplement les données de description de l'arbre pour cette branche temporaire, précisées dans la sortie de la commande @git stash list@. Ce bout de code <code>stash@{<number>}</code> vous précise comment faire référence à cet ensemble de changement. Il suffit de le préciser en argument de la commande @git diff@ pour voir ce qui a changé :

<pre>
$ git diff stash@{0}
diff --git a/TODO b/TODO
index b0ecaeb..4ca398c 100644
--- a/TODO
+++ b/TODO
@@ -1,4 +1,3 @@
 [ ] Easier configuration of Maruka and blahtex directories [mdreid]
 [ ] Accurate "related posts" calculator
-[ ] Autobuild
-[ ] Add more awesome.
+[ ] Autobuild
\ No newline at end of file
</pre>

Vous pouvez également utiliser @git show@  pour voir le comit sur lequel il a été basé. Si vous avez d'autres astuces sur les branches temporaires ou d'autres sujets, "faites le savoir !":http://gitready.com/submit.html
