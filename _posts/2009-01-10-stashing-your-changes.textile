---
published: true
layout: post
title: 'stasher' ses modifications
category: beginner
---

Le 'Stashing' est un moyen efficace d'interrompre son travail en cours et de le reprendre plus tard. Par exemple, si vous développer une nouvelle fonctionnalité géniale mais que quelqu'un vient de trouver un bug dans que vous devez corriger maintenant.
Ajouter vos modifications à l'index en utilisant

@git add .@

Ou ajouter des fichiers individuellement, à vous de choisir. Vous pouvez 'stasher' vos modifications avec:

@git stash@

Et voila ! Vous voila à nouveau dans votre état d'avant modification. Vous avez corrigé le bug trouvé ? Vous pouvez retrouver votre travail en cours avec:

@git stash apply@

Il est possible d'utiliser plusieurs niveaux de 'stash', la commande suivante est alors utile

@git stash list@ 

Pour vérifier tous les stashs en cours. Si vous devez appliquer un stash enfouis dans la pile, c'est possible et facile.
Voici comment appliquer le deuxième stash :

<code>git stash apply stash@{1}</code>

Vous pouvez aussi utiliser le stash en haut de la pile en utilisant ("Merci à jamesgolick!":http://jamesgolick.com/):

@git stash pop@

A propos de cette commande, celle-ci supprime le stash utilisé, contrairement à 'apply' qui le conserve.
Vous pouvez supprimer manuellement avec la commande suivante:

@git stash drop <id>@

Ou bien supprimer toutes les stashs de la pile avec:

@git stash clear@
