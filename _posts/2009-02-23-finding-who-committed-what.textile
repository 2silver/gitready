---
published: true
layout: post
title: trouver qui a commmitté quoi
category: beginner
---

Il est parfois nécessaire de trouver qui a committé un bug, ou complimenter un collègue sur l'efficacité de l'implémentation d'un algorithme. Ou bien, vous voulez juste savoir qui a cassé la dernière version. Par chance, la commande @git blame@ vous permettra de savoir qui est spécifiquement responsable de cette ligne et de quel commit elle provient.

L'utisation de base est la suivante @git blame <file>@. La sortie de cette commande ressemble à ça (il faut voir l'immage en entier!):

p=. "!http://farm4.static.flickr.com/3606/3304779985_6c93865703.jpg!":http://farm4.static.flickr.com/3606/3304779985_2d1842b5f9_o.png

Pour ceux qui se demandent ce que tout cela peut bien signifier, cette image représente les versions courtes des SHA relatifs aux commits , le nom du fichier original, l'auteur et la date du commit, le numéro de ligne, et enfin la ligne de code concernée.

Tout cela est très bien, mais il y a plein d'autres moyens de trouver des responsables. Si votre code est sur Github, cette information est fournie d'office:

p=. "!http://farm4.static.flickr.com/3463/3305616220_05a91c8e70.jpg!":http://farm4.static.flickr.com/3463/3305616220_a7b2850e62_o.jpg

Un autre moyen d'obtenir cette information passe par l'utilisation de "git-age":http://wiki.github.com/krig/git-age, qui est une visionneuse écrite en PyGtk. C'est une application soignée qui montre le Gravatar associé à l'email du commit, et montre les commits plus anciens sur un fond gris sombre.

p=. "!http://farm4.static.flickr.com/3454/3305608128_7000ca6fa2.jpg!":http://farm4.static.flickr.com/3454/3305608128_94edf84e1b_o.png

Si vous connaisser une autre astuce à propos de cette commande ou d'autres visionneuse utiles, merci de les ajouter aux commentaires!
