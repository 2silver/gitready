---
published: false
layout: post
title: list remote branches
category: intermediate
---

有时候你想搞清楚在远程仓库中有哪些分支（http://gitready.com/beginner/2009/01/25/branching-and-merging.html），如果你用的是“Github”: http://github.com或者“gitweb”: http://git.or.cz/gitwiki/Gitweb 存放你的仓库，通常很容易知道分支的名字（因为有图形界面）。但我们想要一种通用的，可以在脚本中使用的方法。

p=. "!http://farm4.static.flickr.com/3163/3100342708_b12c4a36d6.jpg!":http://flickr.com/photos/joiseyshowaa/3100342708/

*UPDATE:* 下面的评论点醒了我，通常在git中有不止一种解决问题的方法。最简单的方法是使用@git branch@命令的各种选项，@-a@可以显示本地和远程的所有分支，@-r@只显示远程分支。

<pre>
$ git branch
* master

$ git branch -a
* master
  origin/1-2-stable
  origin/2-0-stable
  origin/2-1-stable
  origin/2-2-stable
  origin/3-0-unstable
  origin/HEAD
  origin/master

$ git branch -r
  origin/1-2-stable
  origin/2-0-stable
  origin/2-1-stable
  origin/2-2-stable
  origin/3-0-unstable
  origin/HEAD
  origin/master
</pre>

一旦知道了分支名字，要取下来就很简单了（http://gitready.com/intermediate/2009/01/09/checkout-remote-tracked-branch.html），如果你打开了git颜色，列表中红色的就是没取下来的分支。

还可以使用remote相关的命令获取远程的分支，@git remote@和@git ls-remote@。前者显示很多远程仓库的信息以及和本地仓库的关系，后者只是列出了所有的分支和标签。

<pre>
$ git remote show origin
* remote origin
  URL: git://github.com/rails/rails.git
  Remote branch merged with 'git pull' while on branch master
    master
  Tracked remote branches
    1-2-stable 2-0-stable 2-1-stable 2-2-stable 3-0-unstable master

$ git ls-remote --heads origin
5b3f7563ae1b4a7160fda7fe34240d40c5777dcd  refs/heads/1-2-stable
71926912a127da29530520d435c83c48778ac2b2  refs/heads/2-0-stable
2b158543247a150e8ec568becf360e7376f8ab84  refs/heads/2-1-stable
b0792a3e7be88e3060af19bab01cd3d26d347e4c  refs/heads/2-2-stable
d6b9f8410c990b3d68d1970f1461a1d385d098d7  refs/heads/3-0-unstable
f04346d8b999476113d5e5a30661e07899e3ff80  refs/heads/master
</pre>

@ls-remote@命令返回最后一次提交的SHA1哈希值，所以在写脚本的适合很容易解析得到对应的提交。@--heads@选项表示只列出分支名，否则还会列出标签。

如果你用这些命令来干其他事儿，或者有更好的方法获取远程分支的信息，在文章下面添加评论吧。

